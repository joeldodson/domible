[tool.poetry]
name = "domible"
version = "0.1.0"
description = "python classes to create accessible HTML elements and documents "
authors = ["Joel Dodson <joeldodson@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/joeldodson/domible"
repository = "https://github.com/joeldodson/domible"
keywords = ["html", "accessibility", "a11y", "web development", "frontend", "server side rendering", "SSR"]
packages = [
{ include = "domible", from = "src" },
{ include = "dicli", from = "src"},
{ include = "distarter", from = "src"}
]


[tool.poetry.dependencies]
python = "^3.10"
beautifulsoup4 = {version = "^4.11.2", optional = true}
typer = {version = "^0.7.0", optional = true}
jsonloggeriso8601datetime = {version = "^1.0.3", optional = true}


[tool.poetry.group.dev.dependencies]
autopep8 = "^2.0.2"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
beautifulsoup4 = "^4.11.2"
jsonloggeriso8601datetime = "^1.0.3"
pytest-reportlog = "^0.2.1"
myst-nb = {version = "^0.17.2", python = "^3.9"}
sphinx-autoapi = "^2.1.0"
sphinx-rtd-theme = "^1.2.0"
install = "^1.3.5"
ruff = "^0.0.263"

[tool.poetry.extras]
dicli = ["beautifulsoup4", "typer", "jsonloggeriso8601datetime"]

[tool.poetry.scripts]
distarter = "distarter:run"
dicli = { callable = "dicli:run", extras = ["dicli"] }

[tool.semantic_release]
version_variable = "pyproject.toml:version" # version location
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"              # build dists
dist_path = "dist/"                         # where to put dists
upload_to_release = true                    # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
patch_without_tag = true                    # patch release by default

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# see:  https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref for list of configuration options 
# search through level 2 headings to find Configuration
addopts = "-q --no-header --tb=line"  
testpaths = ["tests"]
log_auto_indent = 4 
log_cli = false
log_cli_level = 40 
log_cli_format = "%(levelname)s -- %(message)s -- %(filename)s:%(funcName)s:%(lineno)d"
log_file = "logs/pytest.log" 
log_file_level = 20 
log_file_format = "%(asctime)s(%(msecs)d) -- %(levelname)s -- %(message)s -- %(filename)s:%(funcName)s:%(lineno)d"
log_file_date_format = "%Y-%m-%dT%H:%M:%S%z" 


## end of file 